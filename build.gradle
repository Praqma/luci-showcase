plugins {
    id "net.praqma.luci" version "0.4.4"
}

// For developing on Luci it is convenient to use a plugin from mavenLocal().
// Use the buildscript to do that
/*
buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies { classpath 'net.praqma.luci:luci-gradlePlugin:0.4.4' }
}
apply plugin: 'net.praqma.luci'
*/

luci {

    machineFactories {
        // Here you can define so called machineFactories. You specify how to create docker hosts
        // with docker-machine
        // There are some factories defined out of the box:
        // virtualbox:    Create a docker machine on VirtualBox
        // zetta:         Create a machine on Zetta.io. The properties 'zetta.username', 'zetta.password', 'zetta.domainId'.

        // Properties can be defined as System properties, Gradle project properties, or as Luci settings

        // The task 'listMachineFactories' lists all defined machine factories

        // The zetta factory could be defined like the following
        zetta2 {
            driver = 'openstack'
            // logCommand = true
            // debug = true
            options 'openstack-flavor-id': '6',
                    'openstack-image-id': 'd0a89aa8-9644-408d-a023-4dcc1148ca01',
                    'openstack-floatingip-pool': 'Public',
                    'openstack-ssh-user': 'ubuntu',
                    'openstack-net-name': 'Private',
                    'openstack-sec-groups': 'default,DockerAPI',
                    'openstack-auth-url': 'https://identity.api.zetta.io/v3',
                    'openstack-region': 'no-osl1',
                    'openstack-tenant-name': 'Standard',
                    'openstack-domain-id': '${lookup("zetta.domainId")}',
                    'openstack-username': '${lookup("zetta.username")}',
                    'openstack-password': '${lookup("zetta.password")}'
        }

        virtualBox {
          //  debug = true
          //  logCommand = true
        }
    }

    hosts {
        vm1 {
            // Fails if docker machine lucibox doesn't exists
            // TODO implement other settings, like explicit url
            dockerMachine factory: machineFactories.virtualBox
        }
        vm2 {
            dockerMachine factory: machineFactories.virtualBox
        }
        slaves {
            dockerMachine(name: 'slaves', factory: machineFactories.virtualBox)
        }
        
        zetta1 {
            dockerMachine name: 'luci-one', factory: machineFactories.zetta
        }
        zetta2 {
            dockerMachine name: 'luci-two', factory: machineFactories.zetta
        }
    }

    boxes {
        // A Lucibox name 'demo'
        demo {
            dockerHost = hosts.vm1

            // Use data container so service containers and be deleted without losing data.
            // This can also be specified on individual services
            useDataContainer = true

            service('jenkins') {
                // List of plugins to install. Explicit version numbers or latest
                // Hmmm, maybe I don't know what chucknorris is, but I don't see Chuck anywhere, but it is in the list of installed plugins
                // plugins chucknorris: '0.5', greenballs: 'latest' TODO is broken, jenkins fails to start


                staticSlave('default') {
                    executors = 3 // default is 2
                    // Use java tools image by Luci. But you can use any image you like
                    dockerImage = 'luci/staticslave-javatools:0.5'
                    labels 'one'
                }

                staticSlave('anotherSlave') {
                    //dockerHost = hosts.zetta2
                    dockerImage = 'luci/staticslave-javatools:0.5'
                    labels 'two', 'three'
                }

                // Add groovy files in the jenkinsInit.d dir to the jenkins init.d dir
                initFiles fileTree(dir: 'jenkinsInit.d', include: '**/*.groovy')

                // You can also specify files with a Gradle CopySpec
                // See https://docs.gradle.org/current/userguide/working_with_files.html for some examples
                initFiles {
                    // Copy all templates files from jenkinsInit.d
                    from 'jenkinsInit.d'
                    include '*.template'
                    // Change extension from .template to  .groovy
                    rename '(.*)\\.template', '$1\\.groovy'
                    // Insert the project name in templates
                    expand(name: name)
                }

                // Generate a Jobdsl seed job (and execute it)
                seedJob.with {
                    name = "${project.name}_Seed_Job"
                    jobDslFiles fileTree(dir: 'jobDsl')
                }
            }

             // Declare and configure a service
            service('artifactory') {

            }
        }

        // A Lucibox named 'showcase'
        showcase {
            dockerHost = hosts.vm1
            port = 8090
            // socatForTlsHackPort = 2374

            // Declare one or more services. There is a pre-defined set of service names
            service 'jenkins'

            // Configure a declared serviced
            jenkins {
                // Set executors on Masters. Defautls is one (EXCLUSIVE)
                executors = 5

                // Add a number of static slaves
                (1..2).each { int index ->
                    staticSlave("worker$index") {
                        // set executors on slaves
                        executors = index
                        dockerImage = 'debian:jessie'
                    }
                }
            }

            // Declare and configure a service
            service('artifactory') {

            }

            // configure the webfrontend service. It is alway present
            webfrontend {
                // not implemented yet. This has no effect
                user 'luci', 'praqma'
            }
        }

        training {
          dockerHost = hosts.zetta1
          
          service 'jenkins', 'artifactory'

          jenkins {
            staticSlave('worker1') {
              dockerImage = 'luci/staticslave-javatools:0.5'
              executors = 3
            }
            staticSlave('worker2') {
              dockerImage = 'luci/staticslave-javatools:0.5'
              executors = 4
            }
          }
        }
    }
}

  
